import React, { useState } from 'react'
import Navigation from './Navigation'

const KnowledgeHub = () => {
  const [selectedCategory, setSelectedCategory] = useState('all')
  const [isDarkMode, setIsDarkMode] = useState(false)
  const [isListening, setIsListening] = useState(false)

  // Placeholder data for knowledge articles
  const articles = [
    {
      id: 1,
      title: 'ржЖржзрзБржирж┐ржХ ржХрзГрж╖рж┐ ржкрзНрж░ржпрзБржХрзНрждрж┐',
      category: 'technology',
      icon: 'ЁЯЪЬ',
      image: 'ЁЯМ╛',
      description: 'ржбрзНрж░рзЛржи, рж╕рзЗржирзНрж╕рж░, ржПржмржВ рж╕рзНржорж╛рж░рзНржЯ рж╕рзЗржЪ ржмрзНржпржмрж╕рзНржерж╛рж░ ржорж╛ржзрзНржпржорзЗ ржЖржзрзБржирж┐ржХ ржХрзГрж╖рж┐ ржкрзНрж░ржпрзБржХрзНрждрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЙрзОржкрж╛ржжржи ржмрзГржжрзНржзрж┐ ржХрж░рзБржиред',
      content: [
        'ржбрзНрж░рзЛржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржлрж╕рж▓рзЗрж░ рж╕рзНржмрж╛рж╕рзНржерзНржп ржкрж░рзНржпржмрзЗржХрзНрж╖ржг',
        'рж╕рзЗржирзНрж╕рж░ ржжрж┐ржпрж╝рзЗ ржорж╛ржЯрж┐рж░ ржЖрж░рзНржжрзНрж░рждрж╛ ржУ ржкрж┐ржПржЗржЪ ржорж╛ржкрж╛',
        'рж╕рзНржорж╛рж░рзНржЯ рж╕рзЗржЪ ржмрзНржпржмрж╕рзНржерж╛рж░ ржорж╛ржзрзНржпржорзЗ ржкрж╛ржирж┐рж░ рж╕рж╛рж╢рзНрж░ржпрж╝',
        'ржЬрж┐ржкрж┐ржПрж╕ ржЯрзЗржХржирзЛрж▓ржЬрж┐ ржжрж┐ржпрж╝рзЗ ржХрзНрж╖рзЗрждрзЗрж░ ржорж╛ржиржЪрж┐рждрзНрж░ рждрзИрж░рж┐',
      ],
      author: 'ржб. ржЖрж╣ржорзЗржж рж╣рзЛрж╕рзЗржи',
      date: 'рззрзл ржорж╛рж░рзНржЪ, рзирзжрзирзк',
      readTime: 'рзл ржорж┐ржирж┐ржЯ',
    },
    {
      id: 2,
      title: 'рж░рзЛржЧ ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛',
      category: 'disease',
      icon: 'ЁЯжа',
      image: 'ЁЯМ┐',
      description: 'ржлрж╕рж▓рзЗрж░ ржмрж┐ржнрж┐ржирзНржи рж░рзЛржЧ ржЪрж┐рж╣рзНржирж┐ржд ржХрж░рзЗ рж╕ржарж┐ржХ ржмрзНржпржмрж╕рзНржерж╛ ржирж┐ржиред ржЬрзИржм ржУ рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржкржжрзНржзрждрж┐рж░ рж╕ржоржирзНржмржпрж╝рзЗ рж░рзЛржЧ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг ржХрж░рзБржиред',
      content: [
        'ржзрж╛ржи ржХрзНрж╖рзЗрждрзЗ ржмрзНрж▓рж╛рж╕рзНржЯ рж░рзЛржЧрзЗрж░ рж▓ржХрзНрж╖ржг ржУ ржкрзНрж░рждрж┐ржХрж╛рж░',
        'ржЧржо ржХрзНрж╖рзЗрждрзЗ рж░рж╛рж╕рзНржЯ рж░рзЛржЧрзЗрж░ ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛',
        'рж╕ржмржЬрж┐ ржХрзНрж╖рзЗрждрзЗ ржкрж╛ржЙржбрж╛рж░рж┐ ржорж┐рж▓ржбрж┐ржЙ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг',
        'ржЬрзИржм ржХрзАржЯржирж╛рж╢ржХрзЗрж░ ржмрзНржпржмрж╣рж╛рж░ ржУ ржкрзНрж░рж╕рзНрждрзБржд ржкрзНрж░ржгрж╛рж▓рзА',
      ],
      author: 'ржб. ржлрж╛рждрзЗржорж╛ ржмрзЗржЧржо',
      date: 'рззрзи ржорж╛рж░рзНржЪ, рзирзжрзирзк',
      readTime: 'рзн ржорж┐ржирж┐ржЯ',
    },
    {
      id: 3,
      title: 'ржорж╛ржЯрж┐рж░ рж╕рзНржмрж╛рж╕рзНржерзНржп ржЯрж┐ржкрж╕',
      category: 'soil',
      icon: 'ЁЯМ▒',
      image: 'ЁЯМН',
      description: 'ржорж╛ржЯрж┐рж░ рж╕рзНржмрж╛рж╕рзНржерзНржп ржнрж╛рж▓рзЛ рж░рж╛ржЦрж╛рж░ ржЬржирзНржп ржЬрзИржм ржкржжрж╛рж░рзНрже, рж╕рж╛рж░, ржПржмржВ рж╕рзЗржЪрзЗрж░ рж╕ржарж┐ржХ ржмрзНржпржмрж╣рж╛рж░ ржЬрж╛ржирзБржиред',
      content: [
        'ржорж╛ржЯрж┐рж░ ржкрж┐ржПржЗржЪ ржорж╛рждрзНрж░рж╛ ржкрж░рж┐ржорж╛ржк ржУ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг',
        'ржЬрзИржм рж╕рж╛рж░рзЗрж░ ржкрзНрж░рж╕рзНрждрзБржд ржкрзНрж░ржгрж╛рж▓рзА ржУ ржмрзНржпржмрж╣рж╛рж░',
        'ржорж╛ржЯрж┐рж░ ржЖрж░рзНржжрзНрж░рждрж╛ ржмржЬрж╛ржпрж╝ рж░рж╛ржЦрж╛рж░ ржХрзМрж╢рж▓',
        'ржорж╛ржЯрж┐ ржХрзНрж╖ржпрж╝ рж░рзЛржзрзЗ ржХржирзНржЯрзБрж░ ржЪрж╛рж╖ ржкржжрзНржзрждрж┐',
      ],
      author: 'ржб. рж░рж╣ржорж╛ржи ржЖрж▓рзА',
      date: 'рззрзж ржорж╛рж░рзНржЪ, рзирзжрзирзк',
      readTime: 'рзм ржорж┐ржирж┐ржЯ',
    },
    {
      id: 4,
      title: 'ржЬрж▓ржмрж╛ржпрж╝рзБ ржкрж░рж┐ржмрж░рзНрждржи ржУ ржХрзГрж╖рж┐',
      category: 'climate',
      icon: 'ЁЯМН',
      image: 'ЁЯМдя╕П',
      description: 'ржЬрж▓ржмрж╛ржпрж╝рзБ ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржкрзНрж░ржнрж╛ржм ржорзЛржХрж╛ржмрзЗрж▓рж╛ржпрж╝ ржЕржнрж┐ржпрзЛржЬржи ржХрзМрж╢рж▓ ржУ ржЯрзЗржХрж╕ржЗ ржХрзГрж╖рж┐ ржкржжрзНржзрждрж┐ред',
      content: [
        'ржЦрж░рж╛ рж╕рж╣ржирж╢рзАрж▓ ржлрж╕рж▓рзЗрж░ ржЬрж╛ржд ржирж┐рж░рзНржмрж╛ржЪржи',
        'ржмржирзНржпрж╛ ржкрзНрж░рждрж┐рж░рзЛржзрзА ржХрзГрж╖рж┐ ржкржжрзНржзрждрж┐',
        'рждрж╛ржкржорж╛рждрзНрж░рж╛ ржмрзГржжрзНржзрж┐ рж╕рж╣ржирж╢рзАрж▓ ржлрж╕рж▓ ржЪрж╛рж╖',
        'ржЬрж▓ржмрж╛ржпрж╝рзБ рж╕рзНржорж╛рж░рзНржЯ ржХрзГрж╖рж┐ ржкрзНрж░ржпрзБржХрзНрждрж┐',
      ],
      author: 'ржб. рж╕рж╛ржмрж░рж┐ржирж╛ ржЖржХрзНрждрж╛рж░',
      date: 'рзо ржорж╛рж░рзНржЪ, рзирзжрзирзк',
      readTime: 'рзо ржорж┐ржирж┐ржЯ',
    },
    {
      id: 5,
      title: 'ржХрзАржЯржкрждржЩрзНржЧ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг',
      category: 'pest',
      icon: 'ЁЯРЫ',
      image: 'ЁЯжЛ',
      description: 'ржлрж╕рж▓рзЗрж░ ржХрзНрж╖рждрж┐ ржХрж░рзЗ ржПржоржи ржХрзАржЯржкрждржЩрзНржЧ ржЪрж┐рж╣рзНржирж┐ржд ржХрж░рзЗ ржЬрзИржм ржУ рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржкржжрзНржзрждрж┐рждрзЗ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг ржХрж░рзБржиред',
      content: [
        'ржзрж╛ржи ржХрзНрж╖рзЗрждрзЗ рж╕рзНржЯрзЗржо ржмрзЛрж░рж╛рж░ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг',
        'рж╕ржмржЬрж┐ ржХрзНрж╖рзЗрждрзЗ ржЖржлрж┐ржб ржирж┐ржпрж╝ржирзНрждрзНрж░ржг',
        'ржЬрзИржм ржХрзАржЯржирж╛рж╢ржХрзЗрж░ ржкрзНрж░рж╕рзНрждрзБржд ржкрзНрж░ржгрж╛рж▓рзА',
        'ржЗржкрж┐ржПржо (IPM) ржкржжрзНржзрждрж┐рж░ ржмрзНржпржмрж╣рж╛рж░',
      ],
      author: 'ржб. ржЗржорж░рж╛ржи рж╣рзЛрж╕рзЗржи',
      date: 'рзл ржорж╛рж░рзНржЪ, рзирзжрзирзк',
      readTime: 'рзм ржорж┐ржирж┐ржЯ',
    },
    {
      id: 6,
      title: 'ржлрж╕рж▓ рж╕ржВржЧрзНрж░рж╣ ржУ рж╕ржВрж░ржХрзНрж╖ржг',
      category: 'harvest',
      icon: 'ЁЯМ╛',
      image: 'ЁЯУж',
      description: 'ржлрж╕рж▓рзЗрж░ рж╕ржарж┐ржХ рж╕ржоржпрж╝рзЗ рж╕ржВржЧрзНрж░рж╣ ржУ ржжрзАрж░рзНржШржжрж┐ржи рж╕ржВрж░ржХрзНрж╖ржгрзЗрж░ ржХрзМрж╢рж▓ ржЬрж╛ржирзБржиред',
      content: [
        'ржзрж╛ржи рж╕ржВржЧрзНрж░рж╣рзЗрж░ рж╕ржарж┐ржХ рж╕ржоржпрж╝ ржирж┐рж░рзНржзрж╛рж░ржг',
        'ржлрж╕рж▓ рж╢рзБржХрж╛ржирзЛрж░ ржЖржзрзБржирж┐ржХ ржкржжрзНржзрждрж┐',
        'ржЧрзБржжрж╛ржорзЗ рж╕ржВрж░ржХрзНрж╖ржгрзЗрж░ ржХрзМрж╢рж▓',
        'ржлрж╕рж▓рзЗрж░ ржорж╛ржи ржмржЬрж╛ржпрж╝ рж░рж╛ржЦрж╛рж░ ржЙржкрж╛ржпрж╝',
      ],
      author: 'ржб. ржирж╛рж╕рж░рж┐ржи ржЖржХрзНрждрж╛рж░',
      date: 'рзй ржорж╛рж░рзНржЪ, рзирзжрзирзк',
      readTime: 'рзл ржорж┐ржирж┐ржЯ',
    },
  ]

  // Community Posts data
  const communityPosts = [
    {
      id: 1,
      farmer: 'ржЖржмрзНржжрзБрж▓ рж░рж╣ржорж╛ржи',
      location: 'рж░рж╛ржЬрж╢рж╛рж╣рзА',
      crop: 'ржзрж╛ржи',
      story: 'ржЬрзИржм рж╕рж╛рж░рзЗрж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЖржорж╛рж░ ржзрж╛ржирзЗрж░ ржлрж▓ржи рзйрзж% ржмрзЗржбрж╝рзЗржЫрзЗред ржорж╛ржЯрж┐ ржПржЦржи ржЕржирзЗржХ ржЙрж░рзНржмрж░ред',
      image: 'ЁЯМ╛',
      likes: 24,
      date: 'ржЖржЬ',
      verified: true,
    },
    {
      id: 2,
      farmer: 'ржлрж╛рждрзЗржорж╛ ржмрзЗржЧржо',
      location: 'ржврж╛ржХрж╛',
      crop: 'рж╕ржмржЬрж┐',
      story: 'ржбрзНрж░рж┐ржк рж╕рзЗржЪ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ рж╕ржмржЬрж┐ ржЪрж╛рж╖рзЗ ржкрж╛ржирж┐рж░ ржЦрж░ржЪ ржЕрж░рзНржзрзЗржХ ржХржорзЗржЫрзЗред ржЦрзБржм ржнрж╛рж▓рзЛ ржлрж▓ржи ржкрж╛ржЪрзНржЫрж┐ред',
      image: 'ЁЯеж',
      likes: 18,
      date: 'ржХрж╛рж▓',
      verified: false,
    },
    {
      id: 3,
      farmer: 'ржЗржорж░рж╛ржи рж╣рзЛрж╕рзЗржи',
      location: 'ржЪржЯрзНржЯржЧрзНрж░рж╛ржо',
      crop: 'ржнрзБржЯрзНржЯрж╛',
      story: 'ржХрзАржЯржкрждржЩрзНржЧ ржирж┐ржпрж╝ржирзНрждрзНрж░ржгрзЗрж░ ржЬржирзНржп ржирж┐ржо ржкрж╛рждрж╛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗржЫрж┐ред ржЦрзБржм ржХрж╛рж░рзНржпржХрж░рзА ржПржмржВ рж╕рж╛рж╢рзНрж░ржпрж╝рзАред',
      image: 'ЁЯМ╜',
      likes: 31,
      date: 'ржкрж░рж╢рзБ',
      verified: true,
    },
    {
      id: 4,
      farmer: 'ржирж╛рж╕рж░рж┐ржи ржЖржХрзНрждрж╛рж░',
      location: 'рж╕рж┐рж▓рзЗржЯ',
      crop: 'ржЪрж╛',
      story: 'ржЬрзИржм ржЪрж╛ ржЪрж╛рж╖ ржХрж░рзЗ ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо ржжрж╛ржо ржкрж╛ржЪрзНржЫрж┐ред ржмрж┐ржжрзЗрж╢рзЗ рж░ржкрзНрждрж╛ржирж┐ржУ рж╣ржЪрзНржЫрзЗред',
      image: 'ЁЯНГ',
      likes: 42,
      date: 'ржоржЩрзНржЧрж▓',
      verified: true,
    },
  ]

  const categories = [
    { id: 'all', name: 'рж╕ржм', icon: 'ЁЯУЪ' },
    { id: 'technology', name: 'ржкрзНрж░ржпрзБржХрзНрждрж┐', icon: 'ЁЯЪЬ' },
    { id: 'disease', name: 'рж░рзЛржЧ ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛', icon: 'ЁЯжа' },
    { id: 'soil', name: 'ржорж╛ржЯрж┐', icon: 'ЁЯМ▒' },
    { id: 'climate', name: 'ржЬрж▓ржмрж╛ржпрж╝рзБ', icon: 'ЁЯМН' },
    { id: 'pest', name: 'ржХрзАржЯржкрждржЩрзНржЧ', icon: 'ЁЯРЫ' },
    { id: 'harvest', name: 'рж╕ржВржЧрзНрж░рж╣', icon: 'ЁЯМ╛' },
  ]

  const filteredArticles = selectedCategory === 'all' 
    ? articles 
    : articles.filter(article => article.category === selectedCategory)

  // Voice assistance function
  const speakText = (text) => {
    if ('speechSynthesis' in window) {
      setIsListening(true)
      const utterance = new SpeechSynthesisUtterance(text)
      utterance.lang = 'bn-IN'
      utterance.onend = () => setIsListening(false)
      speechSynthesis.speak(utterance)
    } else {
      alert('ржЖржкржирж╛рж░ ржмрзНрж░рж╛ржЙржЬрж╛рж░рзЗ ржнржпрж╝рзЗрж╕ рж╕рж╛ржкрзЛрж░рзНржЯ ржирзЗржЗ')
    }
  }

  // Toggle dark mode
  const toggleDarkMode = () => {
    setIsDarkMode(!isDarkMode)
    document.documentElement.classList.toggle('dark')
  }

  return (
    <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900 text-white' : 'bg-gray-50'}`}>
      <Navigation />
      
      {/* Dark Mode Toggle */}
      <div className="fixed top-20 left-4 z-50">
        <button
          onClick={toggleDarkMode}
          className={`p-3 rounded-full shadow-lg ${
            isDarkMode ? 'bg-yellow-500 text-gray-900' : 'bg-gray-800 text-white'
          }`}
          title={isDarkMode ? 'ржЖрж▓рзЛ ржорзЛржб' : 'ржЕржирзНржзржХрж╛рж░ ржорзЛржб'}
        >
          {isDarkMode ? 'тШАя╕П' : 'ЁЯМЩ'}
        </button>
      </div>
      
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Page Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-800 mb-2">
            ЁЯУЪ ржЬрзНржЮрж╛ржи ржнрж╛ржгрзНржбрж╛рж░
          </h1>
          <p className="text-gray-600">
            ржЖржзрзБржирж┐ржХ ржХрзГрж╖рж┐ ржкрзНрж░ржпрзБржХрзНрждрж┐, рж░рзЛржЧ ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛, ржПржмржВ ржорж╛ржЯрж┐рж░ рж╕рзНржмрж╛рж╕рзНржерзНржп рж╕ржорзНржкрж░рзНржХрж┐ржд ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг рждржерзНржп
          </p>
        </div>

        {/* Category Filter */}
        <div className="mb-8">
          <div className="flex flex-wrap gap-2">
            {categories.map((category) => (
              <button
                key={category.id}
                onClick={() => setSelectedCategory(category.id)}
                className={`px-4 py-2 rounded-lg border-2 transition-all duration-200 ${
                  selectedCategory === category.id
                    ? 'border-farming-green bg-green-50 text-farming-green'
                    : 'border-gray-200 bg-white text-gray-600 hover:border-farming-green hover:bg-green-50'
                }`}
              >
                <span className="mr-2">{category.icon}</span>
                {category.name}
              </button>
            ))}
          </div>
        </div>

        {/* Articles Grid */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12">
          {filteredArticles.map((article) => (
            <div key={article.id} className={`card hover:shadow-xl transition-shadow duration-300 ${isDarkMode ? 'bg-gray-800 border-gray-700' : ''}`}>
              {/* Article Header */}
              <div className="flex items-center space-x-3 mb-4">
                <span className="text-3xl">{article.icon}</span>
                <div>
                  <h3 className="font-semibold text-gray-800 text-lg">{article.title}</h3>
                  <p className="text-sm text-gray-500">
                    {article.author} тАв {article.date}
                  </p>
                </div>
              </div>

              {/* Article Image */}
              <div className="text-center mb-4">
                <div className="text-6xl bg-gray-100 rounded-lg p-4">
                  {article.image}
                </div>
              </div>

              {/* Article Description */}
              <p className="text-gray-600 mb-4 leading-relaxed">
                {article.description}
              </p>

              {/* Article Content Preview */}
              <div className="mb-4">
                <h4 className="font-semibold text-gray-800 mb-2">ржорзВрж▓ ржмрж┐рж╖ржпрж╝рж╕ржорзВрж╣:</h4>
                <ul className="space-y-1">
                  {article.content.slice(0, 2).map((item, index) => (
                    <li key={index} className="flex items-start space-x-2 text-sm text-gray-600">
                      <span className="text-farming-green text-xs mt-1">тАв</span>
                      <span>{item}</span>
                    </li>
                  ))}
                </ul>
              </div>

              {/* Article Footer */}
              <div className="flex items-center justify-between pt-4 border-t border-gray-100">
                <span className="text-sm text-gray-500">
                  тП▒я╕П {article.readTime} ржкржбрж╝рж╛рж░ рж╕ржоржпрж╝
                </span>
                <div className="flex space-x-2">
                  <button 
                    onClick={() => speakText(article.description)}
                    className="text-blue-600 hover:text-blue-800 text-sm"
                    disabled={isListening}
                  >
                    ЁЯФК {isListening ? 'рж╢рзБржиржЫрж┐...' : 'рж╢рзБржирзБржи'}
                  </button>
                  <button className="text-farming-green hover:text-farming-dark-green font-medium">
                    ржЖрж░ржУ ржкржбрж╝рзБржи тЖТ
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* Community Posts Section */}
        <div className="mb-12">
          <div className={`card ${isDarkMode ? 'bg-gray-800 border-gray-700' : ''}`}>
            <h2 className="text-2xl font-bold text-gray-800 mb-6 flex items-center">
              ЁЯСе ржХрзГрж╖ржХ рж╕ржорзНржкрзНрж░ржжрж╛ржпрж╝рзЗрж░ рж╕рж╛ржлрж▓рзНржпрзЗрж░ ржЧрж▓рзНржк
            </h2>
            <div className="grid md:grid-cols-2 gap-6">
              {communityPosts.map((post) => (
                <div key={post.id} className="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                  <div className="flex items-start space-x-3 mb-3">
                    <div className="text-3xl">{post.image}</div>
                    <div className="flex-1">
                      <div className="flex items-center space-x-2 mb-1">
                        <h3 className="font-semibold text-gray-800">{post.farmer}</h3>
                        {post.verified && (
                          <span className="text-blue-600 text-sm">тЬУ ржпрж╛ржЪрж╛ржЗржХрзГржд</span>
                        )}
                      </div>
                      <p className="text-sm text-gray-500">{post.location} тАв {post.crop}</p>
                    </div>
                  </div>
                  
                  <p className="text-gray-700 mb-3 leading-relaxed">{post.story}</p>
                  
                  <div className="flex items-center justify-between">
                    <div className="flex items-center space-x-4">
                      <button className="flex items-center space-x-1 text-gray-500 hover:text-red-500">
                        <span>тЭдя╕П</span>
                        <span>{post.likes}</span>
                      </button>
                      <button 
                        onClick={() => speakText(post.story)}
                        className="flex items-center space-x-1 text-blue-600 hover:text-blue-800"
                        disabled={isListening}
                      >
                        <span>ЁЯФК</span>
                        <span>{isListening ? 'рж╢рзБржиржЫрж┐...' : 'рж╢рзБржирзБржи'}</span>
                      </button>
                    </div>
                    <span className="text-xs text-gray-400">{post.date}</span>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* Featured Article */}
        <div className="mb-12">
          <div className={`card bg-gradient-to-r from-green-50 to-blue-50 border-2 border-farming-green ${isDarkMode ? 'bg-gray-800 border-gray-700' : ''}`}>
            <div className="grid md:grid-cols-2 gap-8 items-center">
              <div>
                <h2 className="text-2xl font-bold text-gray-800 mb-4">
                  ЁЯМЯ ржмрж┐рж╢рзЗрж╖ ржЖрж░рзНржЯрж┐ржХрзЗрж▓: рж╕рзНржорж╛рж░рзНржЯ ржХрзГрж╖рж┐рж░ ржнржмрж┐рж╖рзНржпрзО
                </h2>
                <p className="text-gray-700 mb-4 leading-relaxed">
                  ржХрзГрждрзНрж░рж┐ржо ржмрзБржжрзНржзрж┐ржорждрзНрждрж╛, ржЗржирзНржЯрж╛рж░ржирзЗржЯ ржЕржл ржерж┐ржВрж╕, ржПржмржВ ржмржбрж╝ ржбрзЗржЯрж╛ ржмрж┐рж╢рзНрж▓рзЗрж╖ржгрзЗрж░ ржорж╛ржзрзНржпржорзЗ 
                  ржХрзГрж╖рж┐ ржХрзНрж╖рзЗрждрзНрж░рзЗ ржмрж┐ржкрзНрж▓ржм ржЖрж╕ржЫрзЗред ржЬрж╛ржирзБржи ржХрзАржнрж╛ржмрзЗ ржПржЗ ржкрзНрж░ржпрзБржХрзНрждрж┐ ржЖржкржирж╛рж░ ржХрзГрж╖рж┐ ржЙрзОржкрж╛ржжржи 
                  ржмрзГржжрзНржзрж┐ ржХрж░рждрзЗ ржкрж╛рж░рзЗред
                </p>
                <div className="flex flex-wrap gap-2 mb-4">
                  <span className="px-3 py-1 bg-farming-green text-white rounded-full text-sm">
                    #рж╕рзНржорж╛рж░рзНржЯржХрзГрж╖рж┐
                  </span>
                  <span className="px-3 py-1 bg-weather-blue text-white rounded-full text-sm">
                    #ржкрзНрж░ржпрзБржХрзНрждрж┐
                  </span>
                  <span className="px-3 py-1 bg-soil-brown text-white rounded-full text-sm">
                    #ржнржмрж┐рж╖рзНржпрзО
                  </span>
                </div>
                <div className="flex space-x-3">
                  <button 
                    onClick={() => speakText('рж╕рзНржорж╛рж░рзНржЯ ржХрзГрж╖рж┐рж░ ржнржмрж┐рж╖рзНржпрзО: ржХрзГрждрзНрж░рж┐ржо ржмрзБржжрзНржзрж┐ржорждрзНрждрж╛, ржЗржирзНржЯрж╛рж░ржирзЗржЯ ржЕржл ржерж┐ржВрж╕, ржПржмржВ ржмржбрж╝ ржбрзЗржЯрж╛ ржмрж┐рж╢рзНрж▓рзЗрж╖ржгрзЗрж░ ржорж╛ржзрзНржпржорзЗ ржХрзГрж╖рж┐ ржХрзНрж╖рзЗрждрзНрж░рзЗ ржмрж┐ржкрзНрж▓ржм ржЖрж╕ржЫрзЗ')}
                    className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                    disabled={isListening}
                  >
                    ЁЯФК {isListening ? 'рж╢рзБржиржЫрж┐...' : 'рж╢рзБржирзБржи'}
                  </button>
                  <button className="btn-primary">
                    ЁЯУЦ рж╕ржорзНржкрзВрж░рзНржг ржкржбрж╝рзБржи
                  </button>
                </div>
              </div>
              <div className="text-center">
                <div className="text-8xl bg-white rounded-full p-8 shadow-lg">
                  ЁЯдЦ
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Newsletter Signup */}
        <div className="mb-12">
          <div className={`card bg-gradient-to-r from-blue-50 to-purple-50 border-2 border-weather-blue ${isDarkMode ? 'bg-gray-800 border-gray-700' : ''}`}>
            <div className="text-center">
              <h3 className="text-xl font-semibold text-gray-800 mb-2">
                ЁЯУз ржирж┐ржпрж╝ржорж┐ржд ржЖржкржбрзЗржЯ ржкрж╛ржи
              </h3>
              <p className="text-gray-600 mb-4">
                ржирждрзБржи ржХрзГрж╖рж┐ ржЯрж┐ржкрж╕, ржкрзНрж░ржпрзБржХрзНрждрж┐ ржПржмржВ ржЧржмрзЗрж╖ржгрж╛ рж╕ржорзНржкрж░рзНржХрж┐ржд ржЖржкржбрзЗржЯ ржкрзЗрждрзЗ рж╕рж╛ржмрж╕рзНржХрзНрж░рж╛ржЗржм ржХрж░рзБржи
              </p>
              <div className="flex flex-col sm:flex-row gap-3 justify-center max-w-md mx-auto">
                <input
                  type="email"
                  placeholder="ржЖржкржирж╛рж░ ржЗржорзЗржЗрж▓ ржарж┐ржХрж╛ржирж╛"
                  className="flex-1 px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-farming-green"
                />
                <button className="btn-primary whitespace-nowrap">
                  рж╕рж╛ржмрж╕рзНржХрзНрж░рж╛ржЗржм
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default KnowledgeHub
